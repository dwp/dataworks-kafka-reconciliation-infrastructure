jobs:
  - name: start-kafka-reconciliation-development
    max_in_flight: 1
    plan:
      - in_parallel:
          - put: meta
            resource: meta-development
          - get: dataworks-aws-ingest-consumers
            trigger: false
          - get: aws-internal-compute
            trigger: false
          - get: aws-ingestion
            trigger: false
      - .: (( inject meta-kafka-reconciliation.plan.terraform-output-ingest ))
        config:
          params:
            TF_WORKSPACE: default
      - .: (( inject meta-kafka-reconciliation.plan.terraform-output-internal-compute ))
        config:
          params:
            TF_WORKSPACE: default
      - .: (( inject meta-kafka-reconciliation.plan.terraform-bootstrap ))
      - .: (( inject meta-kafka-reconciliation.plan.terraform-output-ingest-consumers ))
        config:
          params:
            TF_WORKSPACE: default
      - .: (( inject meta-kafka-reconciliation.plan.kafka-reconciliation ))
        config:
          params:
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.development)):role/ci

  - name: start-kafka-reconciliation-qa
    max_in_flight: 1
    plan:
      - in_parallel:
          - put: meta
            resource: meta-qa
          - get: dataworks-aws-ingest-consumers
            trigger: false
          - get: aws-internal-compute
            trigger: false
          - get: aws-ingestion
            trigger: false
      - .: (( inject meta-kafka-reconciliation.plan.terraform-output-ingest ))
        config:
          params:
            TF_WORKSPACE: qa
      - .: (( inject meta-kafka-reconciliation.plan.terraform-output-internal-compute ))
        config:
          params:
            TF_WORKSPACE: qa
      - .: (( inject meta-kafka-reconciliation.plan.terraform-output-ingest-consumers ))
        config:
          params:
            TF_WORKSPACE: qa
      - .: (( inject meta-kafka-reconciliation.plan.kafka-reconciliation ))
        config:
          params:
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.qa)):role/ci

  - name: start-kafka-reconciliation-integration
    max_in_flight: 1
    plan:
      - in_parallel:
          - put: meta
            resource: meta-integration
          - get: dataworks-aws-ingest-consumers
            trigger: false
          - get: aws-internal-compute
            trigger: false
          - get: aws-ingestion
            trigger: false
      - .: (( inject meta-kafka-reconciliation.plan.terraform-output-ingest ))
        config:
          params:
            TF_WORKSPACE: integration
      - .: (( inject meta-kafka-reconciliation.plan.terraform-output-internal-compute ))
        config:
          params:
            TF_WORKSPACE: integration
      - .: (( inject meta-kafka-reconciliation.plan.terraform-output-ingest-consumers ))
        config:
          params:
            TF_WORKSPACE: integration
      - .: (( inject meta-kafka-reconciliation.plan.kafka-reconciliation ))
        config:
          params:
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.integration)):role/ci

  - name: start-kafka-reconciliation-preprod
    max_in_flight: 1
    plan:
      - in_parallel:
          - put: meta
            resource: meta-preprod
          - get: dataworks-aws-ingest-consumers
            trigger: false
          - get: aws-internal-compute
            trigger: false
          - get: aws-ingestion
            trigger: false
      - .: (( inject meta-kafka-reconciliation.plan.terraform-output-ingest ))
        config:
          params:
            TF_WORKSPACE: preprod
      - .: (( inject meta-kafka-reconciliation.plan.terraform-output-internal-compute ))
        config:
          params:
            TF_WORKSPACE: preprod
      - .: (( inject meta-kafka-reconciliation.plan.terraform-output-ingest-consumers ))
        config:
          params:
            TF_WORKSPACE: preprod
      - .: (( inject meta-kafka-reconciliation.plan.kafka-reconciliation ))
        config:
          params:
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.preprod)):role/ci

  - name: start-kafka-reconciliation-production
    max_in_flight: 1
    plan:
      - in_parallel:
          - put: meta
            resource: meta-production
          - get: dataworks-aws-ingest-consumers
            trigger: false
          - get: aws-internal-compute
            trigger: false
          - get: aws-ingestion
            trigger: false
      - .: (( inject meta-kafka-reconciliation.plan.terraform-output-ingest ))
        config:
          params:
            TF_WORKSPACE: production
      - .: (( inject meta-kafka-reconciliation.plan.terraform-output-internal-compute ))
        config:
          params:
            TF_WORKSPACE: production
      - .: (( inject meta-kafka-reconciliation.plan.terraform-output-ingest-consumers ))
        config:
          params:
            TF_WORKSPACE: production
      - .: (( inject meta-kafka-reconciliation.plan.kafka-reconciliation ))
        config:
          params:
            AWS_ROLE_ARN: arn:aws:iam::((aws_account.production)):role/ci
